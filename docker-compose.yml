name: 'coffee-shop-backend'

services:
  redis:
    image: redis:alpine
    ports:
      - "6379:6379"
    volumes:
      - ./redis_data:/data
    environment:
      - TZ=Asia/Tashkent

  db:
    image: postgres:16
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - ./db_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql
    environment:
      - TZ=Asia/Tashkent
    mem_limit: 2g
    healthcheck:
      test: [ "CMD", "pg_isready", "-U", "${POSTGRES_USER}", "-d", "${POSTGRES_DB}" ]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
      dockerfile: ./Dockerfile
    ports:
      - "8000:8000"
    env_file:
      - .env
    volumes:
      - ./keys:/app/keys
    mem_limit: 512m
    restart: always
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "alembic upgrade head && gunicorn"

  celery:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A celery_app.tasks worker --loglevel=info --pool=solo
    volumes:
      - .:/app
    mem_limit: 256m
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - CELERY_WORKER_CONCURRENCY=1
      - CELERY_TASK_ACKS_LATE=True
      - PYTHONPATH=/app/src

  celery-beat:
    build:
      context: .
      dockerfile: ./Dockerfile
    command: celery -A celery_app.tasks beat --loglevel=info
    volumes:
      - .:/app
    mem_limit: 256m
    restart: unless-stopped
    depends_on:
      redis:
        condition: service_started
      db:
        condition: service_healthy
    env_file:
      - .env
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/1
      - PYTHONPATH=/app/src
